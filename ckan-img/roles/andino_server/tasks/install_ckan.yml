---

- name: Download ckan deb
  shell: wget -O /tmp/python-ckan_2.5-trusty_amd64.deb http://packaging.ckan.org/python-ckan_2.5-trusty_amd64.deb
#  get_url:
#    url: http://packaging.ckan.org/python-ckan_2.5-trusty_amd64.deb
#    dest: /tmp

- name: Setup dirs
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ CKAN_HOME }}"
    - "{{ CKAN_CONFIG }}"
    - "{{ DEFAULT_CKAN_DATA }}"
    - "{{ CKAN_INIT }}"

- name: Create virtualenv
  pip:
    name: pip
    virtualenv: "{{ CKAN_HOME }}"

- name: Create who.ini link
  file:
    state: link
    force: yes
    src: "{{ CKAN_HOME }}/src/ckan/who.ini"
    dest: "{{ CKAN_CONFIG }}/who.ini"


- name: Install ckan
  apt:
    deb: /tmp/python-ckan_2.5-trusty_amd64.deb

- name: Upgrade pip
  pip:
    name: pip
    state: latest
    virtualenv: "{{ CKAN_HOME }}"


- name: Add ckan-requirements
  copy:
    src: ckan-requirements.txt
    dest: "{{ CKAN_HOME }}/ckan-requirements.txt"

- name: Install python requirements
  pip:
    requirements:  "{{ CKAN_HOME }}/ckan-requirements.txt"
    virtualenv: "{{ CKAN_HOME }}"

- name: install Harvest requirements
  pip:
    requirements: "{{ CKAN_HOME }}/src/ckanext-harvest/pip-requirements.txt"
    virtualenv: "{{ CKAN_HOME }}"

- name: Install datajson AR
  pip:
    name: git+https://github.com/datosgobar/ckanext-datajsonAR.git#egg=ckanext-datajson
    virtualenv: "{{ CKAN_HOME }}"

- name: Create hasrvest and other directories
  file:
    state: directory
    dest: "{{ item }}"
  with_items:
    - "{{ CKAN_DIST_MEDIA }}"
    - "{{ CKAN_DIST_CONFIG }}"
    - "{{ CKAN_HARVEST_GCF }}"

- name: Change owners
  file:
    owner: www-data
    group: www-data
    path: "{{ item }}"
  with_items:
    - "{{ CKAN_DIST_MEDIA }}"
    - "{{ CKAN_DIST_CONFIG }}"
    - "{{ DEFAULT_CKAN_DATA }}"

- name: Change chmode
  file:
    mode: u+rwx
    path: "{{ item }}"
    recurse: yes
  with_items:
    - "{{ CKAN_DIST_CONFIG }}"
    - "{{ CKAN_DIST_MEDIA }}"
    - "{{ DEFAULT_CKAN_DATA }}"
